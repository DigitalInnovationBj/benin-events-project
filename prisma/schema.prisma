// This is your Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

// =============================
// MODELS
// =============================

enum Role {
  USER
  ADMIN
}

enum TicketStatus {
  RESERVED
  PAID
  CANCELLED
}

model User {
  id              String    @id               // UID Firebase
  name            String
  email           String    @unique
  role            Role      @default(USER)
  emailVerified   Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  tickets         Ticket[]
  organizedEvents Event[]   @relation("OrganizerEvents")
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  events    Event[]
}

model Event {
  id            String     @id @default(cuid())
  title         String
  description   String
  address       String
  city          String
  country       String
  date          DateTime
  price         Float
  imageUrl      String?
  slug          String?    @unique
  organizer     User       @relation("OrganizerEvents", fields: [organizerId], references: [id])
  organizerId   String
  category      Category?  @relation(fields: [categoryId], references: [id])
  categoryId    String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  tickets       Ticket[]
}

model Ticket {
  id          String       @id @default(cuid())
  event       Event        @relation(fields: [eventId], references: [id])
  eventId     String
  user        User         @relation(fields: [userId], references: [id])
  userId      String
  quantity    Int
  total       Float
  status      TicketStatus @default(PAID)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  unitPrice   Float
}
